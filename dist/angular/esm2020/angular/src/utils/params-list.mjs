/* underscore in name -> watch for changes */
export const paramsList = [
    'init',
    'enabled',
    '_direction',
    'touchEventsTarget',
    'initialSlide',
    '_speed',
    'cssMode',
    'updateOnWindowResize',
    'resizeObserver',
    'nested',
    'focusableElements',
    '_width',
    '_height',
    'preventInteractionOnTransition',
    'userAgent',
    'url',
    '_edgeSwipeDetection',
    '_edgeSwipeThreshold',
    '_freeMode',
    '_autoHeight',
    'setWrapperSize',
    'virtualTranslate',
    '_effect',
    'breakpoints',
    '_spaceBetween',
    '_slidesPerView',
    'maxBackfaceHiddenSlides',
    '_grid',
    '_slidesPerGroup',
    '_slidesPerGroupSkip',
    '_centeredSlides',
    '_centeredSlidesBounds',
    '_slidesOffsetBefore',
    '_slidesOffsetAfter',
    'normalizeSlideIndex',
    '_centerInsufficientSlides',
    '_watchOverflow',
    'roundLengths',
    'touchRatio',
    'touchAngle',
    'simulateTouch',
    '_shortSwipes',
    '_longSwipes',
    'longSwipesRatio',
    'longSwipesMs',
    '_followFinger',
    'allowTouchMove',
    '_threshold',
    'touchMoveStopPropagation',
    'touchStartPreventDefault',
    'touchStartForcePreventDefault',
    'touchReleaseOnEdges',
    'uniqueNavElements',
    '_resistance',
    '_resistanceRatio',
    '_watchSlidesProgress',
    '_grabCursor',
    'preventClicks',
    'preventClicksPropagation',
    '_slideToClickedSlide',
    '_preloadImages',
    'updateOnImagesReady',
    '_loop',
    '_loopAdditionalSlides',
    '_loopedSlides',
    '_loopFillGroupWithBlank',
    'loopPreventsSlide',
    '_rewind',
    '_allowSlidePrev',
    '_allowSlideNext',
    '_swipeHandler',
    '_noSwiping',
    'noSwipingClass',
    'noSwipingSelector',
    'passiveListeners',
    'containerModifierClass',
    'slideClass',
    'slideBlankClass',
    'slideActiveClass',
    'slideDuplicateActiveClass',
    'slideVisibleClass',
    'slideDuplicateClass',
    'slideNextClass',
    'slideDuplicateNextClass',
    'slidePrevClass',
    'slideDuplicatePrevClass',
    'wrapperClass',
    'runCallbacksOnInit',
    'observer',
    'observeParents',
    'observeSlideChildren',
    // modules
    'a11y',
    'autoplay',
    '_controller',
    'coverflowEffect',
    'cubeEffect',
    'fadeEffect',
    'flipEffect',
    'creativeEffect',
    'cardsEffect',
    'panoramaEffect',
    'hashNavigation',
    'history',
    'keyboard',
    'lazy',
    'mousewheel',
    '_navigation',
    '_pagination',
    'parallax',
    '_scrollbar',
    '_thumbs',
    'virtual',
    'zoom',
    'on',
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyYW1zLWxpc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvYW5ndWxhci9zcmMvdXRpbHMvcGFyYW1zLWxpc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkNBQTZDO0FBQzdDLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRztJQUN4QixNQUFNO0lBQ04sU0FBUztJQUNULFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsY0FBYztJQUNkLFFBQVE7SUFDUixTQUFTO0lBQ1Qsc0JBQXNCO0lBQ3RCLGdCQUFnQjtJQUNoQixRQUFRO0lBQ1IsbUJBQW1CO0lBQ25CLFFBQVE7SUFDUixTQUFTO0lBQ1QsZ0NBQWdDO0lBQ2hDLFdBQVc7SUFDWCxLQUFLO0lBQ0wscUJBQXFCO0lBQ3JCLHFCQUFxQjtJQUNyQixXQUFXO0lBQ1gsYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsU0FBUztJQUNULGFBQWE7SUFDYixlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLHlCQUF5QjtJQUN6QixPQUFPO0lBQ1AsaUJBQWlCO0lBQ2pCLHFCQUFxQjtJQUNyQixpQkFBaUI7SUFDakIsdUJBQXVCO0lBQ3ZCLHFCQUFxQjtJQUNyQixvQkFBb0I7SUFDcEIscUJBQXFCO0lBQ3JCLDJCQUEyQjtJQUMzQixnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLFlBQVk7SUFDWixZQUFZO0lBQ1osZUFBZTtJQUNmLGNBQWM7SUFDZCxhQUFhO0lBQ2IsaUJBQWlCO0lBQ2pCLGNBQWM7SUFDZCxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWiwwQkFBMEI7SUFDMUIsMEJBQTBCO0lBQzFCLCtCQUErQjtJQUMvQixxQkFBcUI7SUFDckIsbUJBQW1CO0lBQ25CLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsc0JBQXNCO0lBQ3RCLGFBQWE7SUFDYixlQUFlO0lBQ2YsMEJBQTBCO0lBQzFCLHNCQUFzQjtJQUN0QixnQkFBZ0I7SUFDaEIscUJBQXFCO0lBQ3JCLE9BQU87SUFDUCx1QkFBdUI7SUFDdkIsZUFBZTtJQUNmLHlCQUF5QjtJQUN6QixtQkFBbUI7SUFDbkIsU0FBUztJQUNULGlCQUFpQjtJQUNqQixpQkFBaUI7SUFDakIsZUFBZTtJQUNmLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQix3QkFBd0I7SUFDeEIsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsMkJBQTJCO0lBQzNCLG1CQUFtQjtJQUNuQixxQkFBcUI7SUFDckIsZ0JBQWdCO0lBQ2hCLHlCQUF5QjtJQUN6QixnQkFBZ0I7SUFDaEIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxvQkFBb0I7SUFDcEIsVUFBVTtJQUNWLGdCQUFnQjtJQUNoQixzQkFBc0I7SUFFdEIsVUFBVTtJQUNWLE1BQU07SUFDTixVQUFVO0lBQ1YsYUFBYTtJQUNiLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1osWUFBWTtJQUNaLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsU0FBUztJQUNULFVBQVU7SUFDVixNQUFNO0lBQ04sWUFBWTtJQUNaLGFBQWE7SUFDYixhQUFhO0lBQ2IsVUFBVTtJQUNWLFlBQVk7SUFDWixTQUFTO0lBQ1QsU0FBUztJQUNULE1BQU07SUFDTixJQUFJO0NBQ0wsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIHVuZGVyc2NvcmUgaW4gbmFtZSAtPiB3YXRjaCBmb3IgY2hhbmdlcyAqL1xuZXhwb3J0IGNvbnN0IHBhcmFtc0xpc3QgPSBbXG4gICdpbml0JyxcbiAgJ2VuYWJsZWQnLFxuICAnX2RpcmVjdGlvbicsXG4gICd0b3VjaEV2ZW50c1RhcmdldCcsXG4gICdpbml0aWFsU2xpZGUnLFxuICAnX3NwZWVkJyxcbiAgJ2Nzc01vZGUnLFxuICAndXBkYXRlT25XaW5kb3dSZXNpemUnLFxuICAncmVzaXplT2JzZXJ2ZXInLFxuICAnbmVzdGVkJyxcbiAgJ2ZvY3VzYWJsZUVsZW1lbnRzJyxcbiAgJ193aWR0aCcsXG4gICdfaGVpZ2h0JyxcbiAgJ3ByZXZlbnRJbnRlcmFjdGlvbk9uVHJhbnNpdGlvbicsXG4gICd1c2VyQWdlbnQnLFxuICAndXJsJyxcbiAgJ19lZGdlU3dpcGVEZXRlY3Rpb24nLFxuICAnX2VkZ2VTd2lwZVRocmVzaG9sZCcsXG4gICdfZnJlZU1vZGUnLFxuICAnX2F1dG9IZWlnaHQnLFxuICAnc2V0V3JhcHBlclNpemUnLFxuICAndmlydHVhbFRyYW5zbGF0ZScsXG4gICdfZWZmZWN0JyxcbiAgJ2JyZWFrcG9pbnRzJyxcbiAgJ19zcGFjZUJldHdlZW4nLFxuICAnX3NsaWRlc1BlclZpZXcnLFxuICAnbWF4QmFja2ZhY2VIaWRkZW5TbGlkZXMnLFxuICAnX2dyaWQnLFxuICAnX3NsaWRlc1Blckdyb3VwJyxcbiAgJ19zbGlkZXNQZXJHcm91cFNraXAnLFxuICAnX2NlbnRlcmVkU2xpZGVzJyxcbiAgJ19jZW50ZXJlZFNsaWRlc0JvdW5kcycsXG4gICdfc2xpZGVzT2Zmc2V0QmVmb3JlJyxcbiAgJ19zbGlkZXNPZmZzZXRBZnRlcicsXG4gICdub3JtYWxpemVTbGlkZUluZGV4JyxcbiAgJ19jZW50ZXJJbnN1ZmZpY2llbnRTbGlkZXMnLFxuICAnX3dhdGNoT3ZlcmZsb3cnLFxuICAncm91bmRMZW5ndGhzJyxcbiAgJ3RvdWNoUmF0aW8nLFxuICAndG91Y2hBbmdsZScsXG4gICdzaW11bGF0ZVRvdWNoJyxcbiAgJ19zaG9ydFN3aXBlcycsXG4gICdfbG9uZ1N3aXBlcycsXG4gICdsb25nU3dpcGVzUmF0aW8nLFxuICAnbG9uZ1N3aXBlc01zJyxcbiAgJ19mb2xsb3dGaW5nZXInLFxuICAnYWxsb3dUb3VjaE1vdmUnLFxuICAnX3RocmVzaG9sZCcsXG4gICd0b3VjaE1vdmVTdG9wUHJvcGFnYXRpb24nLFxuICAndG91Y2hTdGFydFByZXZlbnREZWZhdWx0JyxcbiAgJ3RvdWNoU3RhcnRGb3JjZVByZXZlbnREZWZhdWx0JyxcbiAgJ3RvdWNoUmVsZWFzZU9uRWRnZXMnLFxuICAndW5pcXVlTmF2RWxlbWVudHMnLFxuICAnX3Jlc2lzdGFuY2UnLFxuICAnX3Jlc2lzdGFuY2VSYXRpbycsXG4gICdfd2F0Y2hTbGlkZXNQcm9ncmVzcycsXG4gICdfZ3JhYkN1cnNvcicsXG4gICdwcmV2ZW50Q2xpY2tzJyxcbiAgJ3ByZXZlbnRDbGlja3NQcm9wYWdhdGlvbicsXG4gICdfc2xpZGVUb0NsaWNrZWRTbGlkZScsXG4gICdfcHJlbG9hZEltYWdlcycsXG4gICd1cGRhdGVPbkltYWdlc1JlYWR5JyxcbiAgJ19sb29wJyxcbiAgJ19sb29wQWRkaXRpb25hbFNsaWRlcycsXG4gICdfbG9vcGVkU2xpZGVzJyxcbiAgJ19sb29wRmlsbEdyb3VwV2l0aEJsYW5rJyxcbiAgJ2xvb3BQcmV2ZW50c1NsaWRlJyxcbiAgJ19yZXdpbmQnLFxuICAnX2FsbG93U2xpZGVQcmV2JyxcbiAgJ19hbGxvd1NsaWRlTmV4dCcsXG4gICdfc3dpcGVIYW5kbGVyJyxcbiAgJ19ub1N3aXBpbmcnLFxuICAnbm9Td2lwaW5nQ2xhc3MnLFxuICAnbm9Td2lwaW5nU2VsZWN0b3InLFxuICAncGFzc2l2ZUxpc3RlbmVycycsXG4gICdjb250YWluZXJNb2RpZmllckNsYXNzJyxcbiAgJ3NsaWRlQ2xhc3MnLFxuICAnc2xpZGVCbGFua0NsYXNzJyxcbiAgJ3NsaWRlQWN0aXZlQ2xhc3MnLFxuICAnc2xpZGVEdXBsaWNhdGVBY3RpdmVDbGFzcycsXG4gICdzbGlkZVZpc2libGVDbGFzcycsXG4gICdzbGlkZUR1cGxpY2F0ZUNsYXNzJyxcbiAgJ3NsaWRlTmV4dENsYXNzJyxcbiAgJ3NsaWRlRHVwbGljYXRlTmV4dENsYXNzJyxcbiAgJ3NsaWRlUHJldkNsYXNzJyxcbiAgJ3NsaWRlRHVwbGljYXRlUHJldkNsYXNzJyxcbiAgJ3dyYXBwZXJDbGFzcycsXG4gICdydW5DYWxsYmFja3NPbkluaXQnLFxuICAnb2JzZXJ2ZXInLFxuICAnb2JzZXJ2ZVBhcmVudHMnLFxuICAnb2JzZXJ2ZVNsaWRlQ2hpbGRyZW4nLFxuXG4gIC8vIG1vZHVsZXNcbiAgJ2ExMXknLFxuICAnYXV0b3BsYXknLFxuICAnX2NvbnRyb2xsZXInLFxuICAnY292ZXJmbG93RWZmZWN0JyxcbiAgJ2N1YmVFZmZlY3QnLFxuICAnZmFkZUVmZmVjdCcsXG4gICdmbGlwRWZmZWN0JyxcbiAgJ2NyZWF0aXZlRWZmZWN0JyxcbiAgJ2NhcmRzRWZmZWN0JyxcbiAgJ3Bhbm9yYW1hRWZmZWN0JyxcbiAgJ2hhc2hOYXZpZ2F0aW9uJyxcbiAgJ2hpc3RvcnknLFxuICAna2V5Ym9hcmQnLFxuICAnbGF6eScsXG4gICdtb3VzZXdoZWVsJyxcbiAgJ19uYXZpZ2F0aW9uJyxcbiAgJ19wYWdpbmF0aW9uJyxcbiAgJ3BhcmFsbGF4JyxcbiAgJ19zY3JvbGxiYXInLFxuICAnX3RodW1icycsXG4gICd2aXJ0dWFsJyxcbiAgJ3pvb20nLFxuICAnb24nLFxuXTtcbiJdfQ==